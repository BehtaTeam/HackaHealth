<?php

namespace app\controllers\api;

use app\models\CoinTransferLog;
use app\models\Store;
use app\models\StoreCoin;
use app\models\StoreCoinMyket;
use app\models\User;
use Yii;
use yii\helpers\Json;

class StoreController extends \yii\web\Controller
{
	public $enableCsrfValidation = false;
	
	public function beforeAction($action)
	{
		header('Content-Type: application/json;Connection:close');
		
		return parent::beforeAction($action); // TODO: Change the autogenerated stub
	}
	
	public function actionList()
	{
		$market = isset($_POST['market']) ? $_POST['market'] : 'bazaar';
		
		if ($market == 'bazaar') {
			$result = Yii::$app->cache->get("supertelegram_bazaar_store_lists");
			if ($result == false) {
				$list = StoreCoin::find()->where('active=1')->orderBy('sort ASC')->all();
				
				$result = [];
				foreach ($list as $item) {
					$temp['id']            = (int)$item->id;
					$temp['identity']      = $item->identity;
					$temp['coin_count']    = $item->coin_count;
					$temp['price']         = $item->price;
					$temp['striked_value'] = $item->striked_value;
					
					$result['list'][] = $temp;
				}
				
				$result['success'] = 1;
				
				Yii::$app->cache->set("supertelegram_bazaar_store_lists", $result, 200);
			}
		} elseif ($market == 'myket') {
			$result = Yii::$app->cache->get("supertelegram_myket_store_lists");
			if ($result == false) {
				$list = StoreCoinMyket::find()->where('active=1')->orderBy('sort ASC')->all();
				
				$result = [];
				foreach ($list as $item) {
					$temp['id']            = (int)$item->id;
					$temp['identity']      = $item->identity;
					$temp['coin_count']    = $item->coin_count;
					$temp['price']         = $item->price;
					$temp['striked_value'] = $item->striked_value;
					
					$result['list'][] = $temp;
				}
				
				$result['success'] = 1;
				
				Yii::$app->cache->set("supertelegram_myket_store_lists", $result, 200);
			}
		}
		
		echo json_encode($result);
		
	}
	
	public function actionPay()
	{
		$request = \Yii::$app->request;
		
		$telegram_id       = $request->post('telegram_id', '');
		$developer_payload = $request->post('developer_payload', '');
		$bazaar_token      = $request->post('bazaar_token', '');
		$purchase_state    = $request->post('purchase_state', '');
		$item_id           = $request->post('id', '');
		$market            = isset($_POST['market']) ? $_POST['market'] : 'bazaar';
		
		$result = Store::addStock($telegram_id, $item_id, $developer_payload, $bazaar_token, $purchase_state, $market);
		
		echo json_encode($result);
	}
	
	public function actionTransfer()
	{
		$request = Yii::$app->request;
		
		$from_telegram_id   = $request->post('from_telegram_id', '');
		$target_telegram_id = $request->post('target_telegram_id', '');
		$amount             = $request->post('amount', '');
		$token              = $request->post('token', '');
		$at                 = $request->post('at', '');
		
		if ($_SERVER['HTTP_USER_AGENT'] != 'okhttp/3.2.0') {
			echo json_encode(["success" => 2, "error" => 'متاسفانه امکان انتقال سکه در حال حاضر وجود ندارد']); //web service error
			exit;
		}
		
		$result = CoinTransferLog::Transfer($from_telegram_id, $target_telegram_id,
			$amount, $token, $at);
		
		echo json_encode($result);
	}
	
	public function actionTransfer_list()
	{
		$request = Yii::$app->request;
		
		$telegram_id = $request->post('telegram_id', '');
		
		$result = CoinTransferLog::transfer_list($telegram_id);
		
		echo json_encode($result);
	}
	
}
